#	$Id: Makefile,v 1.3 2006/11/06 23:42:32 olethros Exp olethros $	
# Compiler and Linker
CC = g++
LD = g++
AR = ar -rus
DEP = g++ -MM -D__DEPEND__



# Libraries

MYLIBS = 

# Flags

## Use DBG to compile a debug version.

#DBG_OPT=DBG
DBG_OPT=OPT

# Add -pg flag for profiling
CFLAGS_DBG = -g -Wall -pedantic
CFLAGS_OPT = -O3 -Wall -pedantic
CFLAGS=$(CFLAGS_$(DBG_OPT))

# DIRECTORIES - You might want to change those

LIB_DIR_DBG=lib_dbg
LIB_DIR_OPT=lib
LIB_DIR_NAME=$(LIB_DIR_$(DBG_OPT))
OBJ_DIR_DBG=objs_dbg
OBJ_DIR_OPT=objs
OBJ_DIR_NAME=$(OBJ_DIR_$(DBG_OPT))

LIB_OPT_DIR=$(LIB_DBG)


SMPL_DIR := $(shell pwd)
BINDIR = $(SMPL_DIR)/bin
BIN_INSTALL_DIR = $(HOME)/bin
LIBS_DIR = $(SMPL_DIR)/$(LIB_DIR_NAME)
OBJS_DIR = $(SMPL_DIR)/$(OBJ_DIR_NAME)
LIBSMPL = $(LIBS_DIR)/libsmpl.a
LIBSMPLXX = $(LIBS_DIR)/libsmpl++.a
LIBS = -L$(LIBS_DIR) -lsmpl #-lgd
INC := -I$(SMPL_DIR)
# -lnjamd -lefence - add either for debugging

C_FILES := $(wildcard *.c)
OBJS := $(foreach f,$(C_FILES),$(OBJS_DIR)/$(patsubst %.c,%.o,$(f)))

all: $(LIBSMPL)

$(LIBSMPL): $(OBJS)
	@echo "Archiving..."
	@mkdir -p $(LIBS_DIR)
	@$(AR) $(LIBSMPL) $(OBJS)

$(OBJS_DIR)/%.o: %.c
	@mkdir -p $(OBJS_DIR)
	@echo $<
	@$(CC) $(CFLAGS) $(INC) -o $@ -c $<

distclean:
	@\rm -f .deps_*

clean:
	@echo "Cleaning up..."
	@\rm -Rf $(OBJS) $(LIBSMPL)
	@\rm -f .deps


depend:
	@echo "Generating dependencies..."
	@\rm -f .deps
	@for file in *.c; do printf "$(OBJS_DIR)/" >> .deps; $(DEP) $(INC) $$file >> .deps; done

.deps:
	@echo ">>> plase do a 'make depend' <<<"
	exit 10

ifneq ($(MAKECMDGOALS),distclean)
ifneq ($(MAKECMDGOALS),clean)
ifneq ($(MAKECMDGOALS),depend)
include .deps
endif
endif
endif

%: %.c
	@mkdir -p $(BINDIR)
	${MAKE}
	$(CC) -DMAKE_MAIN $(CFLAGS) $(INC) -o $(BINDIR)/$@ $< $(LIBS)

install:
	@mkdir -p $(BIN_INSTALL_DIR)
	cp $(BINDIR)/* $(BIN_INSTALL_DIR)

